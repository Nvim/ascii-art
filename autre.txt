Résumé wikipedia:

Chaque image = un header DIB de 14 octets suivi d'un deuxieme de 40 octets normalement puis une color palette plus ou moins grande selon les BitsPerPixel.
Octet du premier pixel (offset) = 54 pour les 24bits(16 777 216 couleurs), 1078 pour les 8bits(256 couleurs) 118 pour les 4bits(16 couleurs) 


à 24 bytes/pixel, chaque pixel = 3 octets dans l'ordre blue, green, red.
aucune color palette: on passe des 54o de header au pixel array direct

les pixels sont stockés dans la mémoire en rows de taille largeur de l'image en pixels. Il y a hauteur rows.
la taille en octets d'une row est: 

RowSize = (((BitsPerPixel*Width)+31)/32)*4; (tsais c'est la formule ou y'en avait 2 différentes qui étaient marquées égales)

il y a autant de rows que de pixels de hauteur d'image donc :

PixelArraySize/RowSize = height
PixelArraySize = RowSize*height         (height en valeur absolue car certaines images ont une hauteur négative)

La taille de chaque row est toujours multiple de 4. Si jamais elle ne l'est pas, des octets sont rajoutés à la fin de la row
" A 24-bit bitmap with Width=1, would have 3 bytes of data per row (blue, green, red) and 1 byte of padding, while Width=2 would have 6 bytes of data and 2 bytes of padding, Width=3 would have 9 bytes of data and 3 bytes of padding, and Width=4 would have 12 bytes of data and no padding."


V1 DE LA FONCTION SANS STRUCTS

void print_header(char *img){

    FILE * p = p = fopen(img,"rb");
    if (p == NULL){
        printf("\nerreur");
        exit(EXIT_FAILURE);
    }
    printf("\nouverture reussie");
    
    //2 premiers octets: char 'B' et 'M'
    char octet_1;
    char octet_2;
    fread(&octet_1,1,1,p);
    fread(&octet_2,1,1,p);

    //octets 2 à 6: taille de l'image
    int taille_image;
    fread(&taille_image,4,1,p);

    //octets 6 à 10: application utilisée(0) 2 fois
    short int application;
    short int application2;
    fread(&application,2,1,p);
    fread(&application2,2,1,p);

    //octets 10 à 14: adresse de l'octet ou les données de l'image commencent
    int debut;
    fread(&debut,4,1,p);

    //octets 14 à 18: taille du header 2
    int size;
    fread(&size,4,1,p);

    //octets 18 à 20: width
    int width;
    fread(&width,2,1,p);
    //octets 20 à 22: height
    int height;
    fread(&height,2,1,p);
    //octets 22 à 24: color planes(must be 1)
    int planes;
    fread(&planes,2,1,p);
    //octets 24 à 26: bits par pixel
    int bits;
    fread(&bits,2,1,p);

    //affichage
    printf("\ntype de l'image: %c%c", octet_1,octet_2);
    printf("\ntaille de l'image: %d octets", taille_image);
    printf("\napplication utilisee: %d", application);
    printf("\n0 normalement: %d", application2);
    printf("\noctet du premier pixel: %d\n~~~~~~~~", debut);
    printf("\ntaille du header 2: %d",size);
    printf("\nlargeur de l'image: %d",width);
    printf("\nhauteur de l'image: %d",height);
    printf("\ncolor planes: %d",planes);
    printf("\nnombre de bits par pixel: %d",bits);
    fclose(p);
}    

